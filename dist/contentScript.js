(()=>{function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function t(t){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?e(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function n(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const r={isInitialized:!1,softphone:null},o={instance_id:null};chrome.runtime.onMessage.addListener((function(e,t,n){console.log(e),"CHANGE"===e.type&&(console.log(e),r.softphone=e.instanceId),"INTANCE_ID"===e.type&&(console.log("message"),o.instance_id=`${e.instanceId}`)})),window.addEventListener("message",(function(e){e.data.type&&("INITIALIZATION"===e.data.type&&(console.log(e.data),console.log(e.data.data),chrome.runtime.sendMessage(t({type:"INITIALIZATION"},e.data.data))),"OUTGOING_CALL"===e.data.type&&(console.log(e.data),chrome.runtime.sendMessage(t({type:"OUTGOING_CALL"},e.data.data))))}))})();